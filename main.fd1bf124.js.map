{"version":3,"sources":["scripts/main.js"],"names":["url","getResponse","endpoint","fetch","then","response","ok","headers","get","includes","json","Promise","reject","Error","status","renderPhoneInfo","phone","phoneInfoSection","document","querySelector","phoneImgUrl","images","imageElement","createElement","setAttribute","name","classList","add","addEventListener","replaceWith","innerHTML","description","renderError","error","body","changeHandler","e","phones","target","firstElementChild","hasAttribute","selectedPhone","find","value","id","catch","renderRootElement","rootElement","map","join","root","append","items","setTimeout"],"mappings":";AAAA,aAEA,IAAMA,EAAM,4DAENC,EAAc,SAACC,GACZC,OAAAA,MAASH,GAAAA,OAAAA,EAAOE,KAAAA,OAAAA,IACpBE,KAAK,SAAAC,GACA,OAACA,EAASC,GAITD,EAASE,QAAQC,IAAI,gBAAgBC,SAAS,oBAI5CJ,EAASK,OAHPC,QAAQC,OAAO,IAAIC,MAAM,kCAJzBF,QAAQC,OAAO,IAAIC,MAA0BR,oBAAAA,OAAAA,EAASS,aAW/DC,EAAkB,SAACC,GACjBC,IAAAA,EAAmBC,SAASC,cAAc,eAC1CC,EAAc,yDACbJ,GAAAA,OAAAA,EAAMK,OAAO,IACdC,EAAeJ,SAASK,cAAc,OAE5CD,EAAaE,aAAa,MAAOJ,GACjCE,EAAaE,aAAa,MAAOR,EAAMS,MACvCH,EAAaI,UAAUC,IAAI,mBAE3BL,EAAaM,iBAAiB,OAAQ,WACrBV,SAASC,cAAc,WAE/BU,YAAYP,KAGrBL,EAAiBa,UACTd,aAAAA,OAAAA,EAAMS,KAEPT,kDAAAA,OAAAA,EAAMe,YAHb,aAOIC,EAAc,SAACC,GACnBf,SAASgB,KAAKJ,WAEoBG,gEAAAA,OAAAA,EAFlC,2BAOIE,EAAgB,SAACC,EAAGC,GACnBD,EAAEE,OAAOC,kBAAkBC,aAAa,aAC3CJ,EAAEE,OAAOC,kBAAkBf,aAAa,WAAY,QAGhDiB,IAAAA,EAAgBJ,EAAOK,KAAK,SAAA1B,GAASA,OAAAA,EAAMS,OAASW,EAAEE,OAAOK,QAC1CzB,SAASC,cAAc,eAE/BW,UAAjB,mCAIA7B,EAAuBwC,WAAAA,OAAAA,EAAcG,GAArC,UACGxC,KAAK,SAAAY,GAASD,OAAAA,EAAgBC,KAC9B6B,MAAM,SAAAZ,GAASD,OAAAA,EAAYC,MAG1Ba,EAAoB,SAACT,GACnBU,IAAAA,EAAc7B,SAASC,cAAc,SAE3C4B,EAAYjB,UAGNO,uEAAAA,OAAAA,EAAOW,IAAI,SAAAhC,GAAoBA,MAAAA,WAAAA,OAAAA,EAAMS,KAArB,eAAsCwB,KAAK,IAHjE,2DAQqBF,EAAYR,kBAEpBX,iBAAiB,SAAU,SAACQ,GAAMD,OAAAA,EAAcC,EAAGC,MAG5Da,EAAOhC,SAASK,cAAc,OAEpC2B,EAAKxB,UAAUC,IAAI,QAEnBuB,EAAKpB,UAAL,mCAGAZ,SAASgB,KAAKiB,OAAOD,GAErBjD,EAAY,gBACTG,KAAK,SAAAgD,GAASN,OAAAA,EAAkBM,KAChCP,MAAM,SAAAZ,GAASoB,OAAAA,WAAW,WAAMrB,OAAAA,EAAYC,IAAQ","file":"main.fd1bf124.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst getResponse = (endpoint) => {\n  return fetch(`${url}/${endpoint}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(`Request status - ${response.status}`));\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        return Promise.reject(new Error('Content type is not supported'));\n      }\n\n      return response.json();\n    });\n};\n\nconst renderPhoneInfo = (phone) => {\n  const phoneInfoSection = document.querySelector('.phone-info');\n  const phoneImgUrl = `https://mate-academy.github.io/phone-catalogue-static/`\n    + `${phone.images[0]}`;\n  const imageElement = document.createElement('img');\n\n  imageElement.setAttribute('src', phoneImgUrl);\n  imageElement.setAttribute('alt', phone.name);\n  imageElement.classList.add('phone-info__img');\n\n  imageElement.addEventListener('load', () => {\n    const loader = document.querySelector('.loader');\n\n    loader.replaceWith(imageElement);\n  });\n\n  phoneInfoSection.innerHTML = `\n    <h1>${phone.name}</h1>\n    <div class=\"loader\"></div>\n    <p>${phone.description}</p>\n  `;\n};\n\nconst renderError = (error) => {\n  document.body.innerHTML += `\n    <div class=\"error\">\n      <div class=\"error__message\">${error}</div>\n    </div>\n  `;\n};\n\nconst changeHandler = (e, phones) => {\n  if (!e.target.firstElementChild.hasAttribute('disabled')) {\n    e.target.firstElementChild.setAttribute('disabled', 'true');\n  }\n\n  const selectedPhone = phones.find(phone => phone.name === e.target.value);\n  const phoneInfoSection = document.querySelector('.phone-info');\n\n  phoneInfoSection.innerHTML = `\n    <div class=\"loader\" />\n  `;\n\n  getResponse(`/phones/${selectedPhone.id}.json`)\n    .then(phone => renderPhoneInfo(phone))\n    .catch(error => renderError(error));\n};\n\nconst renderRootElement = (phones) => {\n  const rootElement = document.querySelector('.root');\n\n  rootElement.innerHTML = `\n    <select>\n      <option>Please choose a phone</option>\n      ${phones.map(phone => `<option>${phone.name}</option>`).join('')}\n    </select>\n    <section class=\"phone-info\" />\n  `;\n\n  const selectPhones = rootElement.firstElementChild;\n\n  selectPhones.addEventListener('change', (e) => changeHandler(e, phones));\n};\n\nconst root = document.createElement('div');\n\nroot.classList.add('root');\n\nroot.innerHTML = `\n  <div class=\"loader\"></div>\n`;\ndocument.body.append(root);\n\ngetResponse('/phones.json')\n  .then(items => renderRootElement(items))\n  .catch(error => setTimeout(() => renderError(error), 5000));\n"]}